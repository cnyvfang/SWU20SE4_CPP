//请勿直接复制进编译器运行 代码不完整
//
//
//请勿直接复制粘贴！！应当自己看懂代码！！
//
//
#include <iostream>

using namespace std;

class Complex
{
public:
    Complex(double r = 0, double i = 0) :real(r), imag(i) {    }
    Complex operator+(const Complex& a) const;//重载双目运算符'+'
    Complex operator-=(const Complex& a); //重载双目运算符'-='
    friend Complex operator-(const Complex& a, const Complex& b);//重载双目运算符'-'
    void Display() const;
private:
    double real;
    double imag;
};

void Complex::Display() const
{
    cout << "(" << real << ", " << imag << ")" << endl;
}

Complex Complex::operator+(const Complex& a) const {
    Complex c;
    c.real = this->real + a.real;
    c.imag = this->imag + a.imag;
    return c;
}

Complex Complex::operator-=(const Complex& a) {
    this->real = this->real - a.real;
    this->imag = this->imag - a.imag;
    return *this;
}

Complex operator-(const Complex& a, const Complex& b) {
    Complex c;
    c.real = a.real - b.real;
    c.imag = a.imag - b.imag;
    return c;    
}

int main()
{
    double r, m;
    cin >> r >> m;
    Complex c1(r, m);
    cin >> r >> m;
    Complex c2(r, m);
    Complex c3 = c1 + c2;
    c3.Display();
    c3 = c1 - c2;
    c3.Display();
    c3 -= c1;
    c3.Display();
    return 0;
}
